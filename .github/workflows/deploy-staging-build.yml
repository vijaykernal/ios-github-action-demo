name: Deploy Staging Build

on:
  push:
    branches: [ 'main' ]

permissions:
  actions: write
  contents: write

env:
  IPA_NAME: "Demo-Staging.ipa"
  APP_NAME: "Demo App - Staging"
  FIREBASE_DISTRIBUTION_LINK: "https://appdistribution.firebase.google.com/testerapps"



jobs:
  deploy-ios:
    runs-on: macos-latest
    timeout-minutes: 30
    env:
      ENV_VARIABLE: "Dev"
    outputs:
      version-name: ${{ steps.ios-version.outputs.VERSION_NAME }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Setup Apple Signing
        uses: ./.github/actions/apple-signing
        with:
          CERTIFICATE_BASE64: ${{secrets.CERTIFICATE_BASE64 }}
          CERTIFICATE_PASSWORD: ${{secrets.CERTIFICATE_PASSWORD }}
          PROVISION_PROFILE_BASE64: ${{secrets.PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{secrets.KEYCHAIN_PASSWORD }}

      - name: Build Staging IPA
        run: |
          echo -n "${{ secrets.FIREBASE_CREDENTIALS }}" | base64 --decode --output 'firebase_credentials.json'
          fastlane develop

      - name: Rename IPA File
        run: mv *.ipa ${{ env.IPA_NAME }}

      - name: Upload iOS Release
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.IPA_NAME }}
          path: ${{ env.IPA_NAME }}
          compression-level: 0 # no compression

      - name: Retrieve version name
        id: ios-version
        shell: bash
        run: |
          echo "VERSION_NAME=$(xcodebuild -target ios-github-action-demo -showBuildSettings  | grep -i 'MARKETING_VERSION' | sed 's/[ ]*MARKETING_VERSION = //')" >> $GITHUB_OUTPUT
          

  # Required because of https://github.com/wzieba/Firebase-Distribution-Github-Action/issues/24
  firebase-distribution:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: [ deploy-ios ]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Upload IPA artifact to Firebase App Distribution
        uses: ./.github/actions/firebase-distribution
        with:
          app-build-file-path: ${{ env.IPA_NAME }}
          download-build: 'true'
          firebase-app-id: ${{ vars.FIREBASE_STAGING_IOS_APP_ID }}
          firebase-credentials: ${{ secrets.FIREBASE_CREDENTIALS }}

  create-tag:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: [ firebase-distribution]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Create GitHub Release
        uses: ./.github/actions/github-release
        with:
          app-name: 'Demo'
          create-tag: 'true'
          create-release: 'false'
          version-name: ${{ needs.deploy-android.outputs.version-name }}

      - name: Notify release on google chat
        uses: ./.github/actions/notify-google-chat
        with:
          app-name: ${{ env.APP_NAME }}
          app-platform: 'iOS'
          app-build-link: '${{ env.FIREBASE_DISTRIBUTION_LINK }}/${{ vars.FIREBASE_STAGING_IOS_APP_ID }}'
          google-chat-webhook: ${ secrets.GOOGLE_CHAT_WEBHOOK }}
          version-name: ${{ needs.deploy-ios.outputs.version-name }}
          skip-tag: true
